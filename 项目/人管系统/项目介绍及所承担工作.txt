时间： 2018.7 - 至今
项目介绍: 该系统实现的是对员工信息的管理。采用前后端分离技术，前端使用react框架,后端使用微服务框架。

本人承担工作:负责系统需求分析，页面模块分类。将模块分配给其他同事，负责项目进度根据。还有一些模块的开发

项目中遇到的难点和解决方法:
前期虽然规划了项目进度，比如到哪一天要完成哪个模块开发。可是如果没有及时跟进的话，到那一天再询问的话往往没有完成项目预计的进度。
后来通过每周例会，拉上后端，ui,项目经理，讨论目前的进度，上周遗留的问题，还有本周需要完成的内容。这样细化工作后，要比之前大概的
说下效果要好

1.点击编辑按钮传递参数问题
如果在组件都onClick事件写成： onClick = {this.canEdit(index)}
则页面在加载时候就会执行这个事件，并且之后点击编辑按钮不会再执行该事件。因为此时this.canEdit(index)就是一个已经执行的函数了，
所以onClick事件触发时候就不会再执行了。
解决方法，写成：  onClick = {() => this.canEdit(index)}
箭头函数返回一个函数，写成 function () {
                        return this.canEdit(index)
                       }
这样当事件触发时，即执行该函数this.canEdit(index)();

## 事件获取值

1. onChange={this.onchange.bind(this,你要传的参数)}    用bind，this后面加上你要的参数，他会把value值传到你写的方法的最后一个参数上

2. onChange={(value)=>{this.onchange(value,你要传的参数)}}   显式地把value写出来，这样就可以把value和参数都传过去

2.input框输入后没有效果
如果使用onBlur事件，则需写成defaultValue.
如果input标签使用的是value属性，则需使用onChange事件。onChange = {this.handlenChange}
在定义的函数中使用event.target.value接收值: handlenChange = (event) => {console.log(event.target.value)

3.模态框问题
1）点击某一按钮弹出模态框，点击屏幕非模态框部分该模态框也会消失
解决方法：需在Modal组件传入maskClosable={false}即可

4.加空格
<span>&nbsp;</span>

5.componentWillReceiveProps = (props) => {
    console.log(props);
    console.log(this.props);
}
加不加this是有区别的。如果要获取最新的props，则不用加this

6.a标签中href传参
<href={'#/sys/get?key='+key} />

7.upload 组件上传图片
1）当传图片到后端时，应使用formData格式
 const formData = new FormData();
 formData.append('files',file);  //注意file的name应与后端定义的name一致
 .....
 service.post(url,formData,callback);

 2）上传完图片，如果需要在本地展示图片，应在callback函数中判断后端是否更新成功来决定是否更新本地的图片展示，
 这样就不用调后端初始化接口了。此时，应使用base64格式编码：
 //将文件转换为base64格式
 function getBase64(img, callback) {
  const reader = new FileReader();
  reader.addEventListener('load', () => callback(reader.result));
  reader.readAsDataURL(img);
}
getBase64(info.file.originFileObj, imageUrl => this.setState({
    imageUrl,
    loading: false,
}));

3）在upload的props中，如果不调用props的action,则需在
beforeUpload函数中返回false

8.事件冒泡
父组件为Tabs组件，子组件有Select组件，父子组件都有onChange方法，所以当Select组件点击会调用onChange方法，
执行完后执行Tabs组件的onChange方法。这样会导致一些逻辑问题。
解决方法：1)阻止事件冒泡 e.stopPropagation()
        2)Tabs组件不使用onChange方法，改成使用onTabClick方法